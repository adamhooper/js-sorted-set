!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(t=t||self)["sorted-set"]=r()}(this,(function(){"use strict";class t{constructor(t,r){this.priv=t,this.index=r,this.data=this.priv.data}hasNext(){return this.index<this.data.length}hasPrevious(){return this.index>0}value(){return this.index<this.data.length?this.data[this.index]:null}setValue(t){if(!this.priv.options.allowSetValue)throw"Must set options.allowSetValue";if(!this.hasNext())throw"Cannot set value at end of set";return this.data[this.index]=t}next(){return this.index>=this.data.length?null:new t(this.priv,this.index+1)}previous(){return this.index<=0?null:new t(this.priv,this.index-1)}}const r=(t,r,e)=>{var i,n,l;for(n=0,i=t.length;n<i;)e(t[l=n+i>>>1],r)<0?n=l+1:i=l;return n};const e=(t,r)=>{for(var e;null!==r[t];)e=r,(r=r[t])._iteratorParentNode=e;return r},i=(t,r)=>{var i;if(null!==r[t])i=r,(r=r[t])._iteratorParentNode=i,r=e("left"===t?"right":"left",r);else{for(;null!==(i=r._iteratorParentNode)&&i[t]===r;)r=i;r=i}return r};class n{constructor(t,r){this.tree=t,this.node=r}next(){var t;return null===this.node?null:(t=i("right",this.node),new n(this.tree,t))}previous(){var t;return null===this.node?null===this.tree.root?null:(this.tree.root._iteratorParentNode=null,t=e("right",this.tree.root),new n(this.tree,t)):null===(t=i("left",this.node))?null:new n(this.tree,t)}hasNext(){return null!==this.node}hasPrevious(){return null!==this.previous()}value(){return null===this.node?null:this.node.value}setValue(t){if(!this.tree.options.allowSetValue)throw"Must set options.allowSetValue";if(!this.hasNext())throw"Cannot set value at end of set";return this.node.value=t}}n.find=function(t,r,e){var i,l,s,o;for(null!=(o=t.root)&&(o._iteratorParentNode=null),s=o,l=null;null!==s&&0!==(i=e(r,s.value));)if(i<0){if(null===s.left)break;l=s,s.left._iteratorParentNode=s,s=s.left}else{if(null===s.right){s=l;break}s.right._iteratorParentNode=s,s=s.right}return new n(t,s)},n.left=t=>{var r;return null===t.root?new n(t,null):(t.root._iteratorParentNode=null,r=e("left",t.root),new n(t,r))},n.right=t=>new n(t,null);const l=(t,r)=>{null!==t&&(l(t.left,r),r(t.value),l(t.right,r))};class s{toArray(){var t;return t=[],l(this.root,(function(r){return t.push(r)})),t}clear(){return this.root=null}forEachImpl(t,r,e){var i;i=0,l(this.root,(function(n){return t.call(e,n,i,r),i+=1}))}contains(t){var r,e,i;for(e=this.comparator,i=this.root;null!==i&&0!==(r=e(t,i.value));)i=r<0?i.left:i.right;return null!==i&&i.value===t}findIterator(t){return n.find(this,t,this.comparator)}beginIterator(){return n.left(this)}endIterator(){return n.right(this)}}class o{constructor(t){this.value=t,this.left=null,this.right=null}}const a=(t,r,e)=>{var i,n;if(null===t)throw"Value not in set";return(i=e(r,t.value))<0?t.left=a(t.left,r,e):i>0?t.right=a(t.right,r,e):null===t.left&&null===t.right?t=null:null===t.right?t=t.left:null===t.left?t=t.right:(n=((t,r)=>{for(;null!==t[r];)t=t[r];return t})(t.right,"left"),t.value=n.value,t.right=a(t.right,n.value,e)),t};class h{constructor(t){this.value=t,this.left=null,this.right=null,this.isRed=!0}}const u=t=>{var r;return r=t.right,t.right=r.left,r.left=t,r.isRed=t.isRed,t.isRed=!0,r},f=t=>{var r;return r=t.left,t.left=r.right,r.right=t,r.isRed=t.isRed,t.isRed=!0,r},d=t=>{t.isRed=!t.isRed,t.left.isRed=!t.left.isRed,t.right.isRed=!t.right.isRed},c=t=>(d(t),null!==t.right&&null!==t.right.left&&t.right.left.isRed&&(t.right=f(t.right),t=u(t),d(t)),t),v=(t,r,e,i)=>{var n;return null===t?new h(r):(0===(n=e(r,t.value))?t.value=i(t.value,r):n<0?t.left=v(t.left,r,e,i):t.right=v(t.right,r,e,i),null===t.right||!t.right.isRed||null!==t.left&&t.left.isRed||(t=u(t)),null!==t.left&&t.left.isRed&&null!==t.left.left&&t.left.left.isRed&&(t=f(t)),null!==t.left&&t.left.isRed&&null!==t.right&&t.right.isRed&&d(t),t)},g=t=>(null!==t.right&&t.right.isRed&&(t=u(t)),null!==t.left&&t.left.isRed&&null!==t.left.left&&t.left.left.isRed&&(t=f(t)),null!==t.left&&t.left.isRed&&null!==t.right&&t.right.isRed&&d(t),t),p=t=>null===t.left?null:(t.left.isRed||null!==t.left.left&&t.left.left.isRed||(t=c(t)),t.left=p(t.left),g(t)),R=(t,r,e)=>{if(null===t)throw"Value not in set";if(t.value!==r&&e(r,t.value)<0){if(null===t.left)throw"Value not in set";t.left.isRed||null!==t.left.left&&t.left.left.isRed||(t=c(t)),t.left=R(t.left,r,e)}else{if(null!==t.left&&t.left.isRed&&(t=f(t)),null===t.right){if(r===t.value)return null;throw"Value not in set"}t.right.isRed||null!==t.right.left&&t.right.left.isRed||(t=(t=>(d(t),null!==t.left&&null!==t.left.left&&t.left.left.isRed&&(t=f(t),d(t)),t))(t)),r===t.value?(t.value=(t=>{for(;null!==t.left;)t=t.left;return t})(t.right).value,t.right=p(t.right)):t.right=R(t.right,r,e)}return null!==t&&(t=g(t)),t};class w extends s{constructor(t){super(),this.options=t,this.comparator=this.options.comparator,this.onInsertConflict=this.options.onInsertConflict,this.root=null}insert(t){this.root=v(this.root,t,this.comparator,this.onInsertConflict),this.root.isRed=!1}remove(t){this.root=R(this.root,t,this.comparator),null!==this.root&&(this.root.isRed=!1)}}const m={OnInsertConflictThrow:(t,r)=>{throw new Error("Value already in set")},OnInsertConflictReplace:(t,r)=>r,OnInsertConflictIgnore:(t,r)=>t};class I extends class{constructor(t){if(null==(null!=t?t.strategy:void 0))throw"Must pass options.strategy, a strategy";if(null==(null!=t?t.comparator:void 0))throw"Must pass options.comparator, a comparator";if(null==(null!=t?t.onInsertConflict:void 0))throw"Must pass options.onInsertConflict, a function";this.priv=new t.strategy(t),this.length=0}insert(t){return this.priv.insert(t),this.length+=1,this}remove(t){return this.priv.remove(t),this.length-=1,this}clear(){return this.priv.clear(),this.length=0,this}contains(t){return this.priv.contains(t)}toArray(){return this.priv.toArray()}forEach(t,r){return this.priv.forEachImpl(t,this,r),this}map(t,r){var e;return e=[],this.forEach((function(i,n,l){return e.push(t.call(r,i,n,l))})),e}filter(t,r){var e;return e=[],this.forEach((function(i,n,l){if(t.call(r,i,n,l))return e.push(i)})),e}every(t,r){var e;return e=!0,this.forEach((function(i,n,l){if(e&&!t.call(r,i,n,l))return e=!1})),e}some(t,r){var e;return e=!1,this.forEach((function(i,n,l){if(!e&&t.call(r,i,n,l))return e=!0})),e}findIterator(t){return this.priv.findIterator(t)}beginIterator(){return this.priv.beginIterator()}endIterator(){return this.priv.endIterator()}}{constructor(t){t||(t={}),t.strategy||(t.strategy=w),t.comparator||(t.comparator=function(t,r){return(t||0)-(r||0)}),t.onInsertConflict||(t.onInsertConflict=m.OnInsertConflictThrow),super(t)}}return I.ArrayStrategy=class{constructor(t){this.options=t,this.onInsertConflict=this.options.onInsertConflict,this.comparator=this.options.comparator,this.data=[]}toArray(){return this.data}insert(t){var e;return e=r(this.data,t,this.comparator),void 0!==this.data[e]&&0===this.comparator(this.data[e],t)?this.data.splice(e,1,this.onInsertConflict(this.data[e],t)):this.data.splice(e,0,t)}remove(t){var e;if(e=r(this.data,t,this.comparator),this.data[e]!==t)throw"Value not in set";return this.data.splice(e,1)}clear(){return this.data.length=0}contains(t){var e;return e=r(this.data,t,this.comparator),this.index!==this.data.length&&this.data[e]===t}forEachImpl(t,r,e){var i,n,l,s,o;for(n=i=0,l=(s=this.data).length;i<l;n=++i)o=s[n],t.call(e,o,n,r)}findIterator(e){var i;return i=r(this.data,e,this.comparator),new t(this,i)}beginIterator(){return new t(this,0)}endIterator(){return new t(this,this.data.length)}},I.BinaryTreeStrategy=class extends s{constructor(t){super(),this.options=t,this.comparator=this.options.comparator,this.onInsertConflict=this.options.onInsertConflict,this.root=null}insert(t){var r,e,i,n;if(e=this.comparator,null!=this.root){for(n=this.root;;){if(0===(r=e(t,n.value)))return void(n.value=this.onInsertConflict(n.value,t));if(null===n[i=r<0?"left":"right"])break;n=n[i]}return n[i]=new o(t)}return this.root=new o(t)}remove(t){return this.root=a(this.root,t,this.comparator)}},I.RedBlackTreeStrategy=w,Object.assign(I,m),I}));
//# sourceMappingURL=sorted-set.min.js.map

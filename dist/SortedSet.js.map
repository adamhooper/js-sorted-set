{
  "version": 3,
  "file": "SortedSet.js",
  "sourceRoot": "..",
  "sources": [
    "src/SortedSet.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,iBAAA,EAAA,aAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,SAAA,EAAA;;EAAA,iBAAA,GAAoB,OAAA,CAAQ,+BAAR;;EACpB,aAAA,GAAgB,OAAA,CAAQ,2BAAR;;EAChB,kBAAA,GAAqB,OAAA,CAAQ,gCAAR;;EACrB,oBAAA,GAAuB,OAAA,CAAQ,kCAAR;;EACvB,uBAAA,GAA0B,OAAA,CAAQ,2BAAR;;EAEpB,YAAN,MAAA,UAAA,QAAwB,kBAAxB;IACE,WAAa,CAAC,OAAD,CAAA;MACX,YAAA,UAAY,CAAA;MACZ,OAAO,CAAC,aAAR,OAAO,CAAC,WAAa;MACrB,OAAO,CAAC,eAAR,OAAO,CAAC,aAAe,QAAA,CAAC,CAAD,EAAI,CAAJ,CAAA;eAAU,CAAC,CAAA,IAAK,CAAN,CAAA,GAAW,CAAC,CAAA,IAAK,CAAN;MAArB;MACvB,OAAO,CAAC,qBAAR,OAAO,CAAC,mBAAqB,uBAAuB,CAAC;WACrD,CAAM,OAAN;IALW;;EADf;;EAQA,SAAS,CAAC,aAAV,GAA0B;;EAC1B,SAAS,CAAC,kBAAV,GAA+B;;EAC/B,SAAS,CAAC,oBAAV,GAAiC;;EAEjC,SAAS,CAAC,qBAAV,GAAkC,uBAAuB,CAAC;;EAC1D,SAAS,CAAC,uBAAV,GAAoC,uBAAuB,CAAC;;EAC5D,SAAS,CAAC,sBAAV,GAAmC,uBAAuB,CAAC;;EAE3D,MAAM,CAAC,OAAP,GAAiB;AAtBjB",
  "sourcesContent": [
    "AbstractSortedSet = require('./SortedSet/AbstractSortedSet')\nArrayStrategy = require('./SortedSet/ArrayStrategy')\nBinaryTreeStrategy = require('./SortedSet/BinaryTreeStrategy')\nRedBlackTreeStrategy = require('./SortedSet/RedBlackTreeStrategy')\ninsertConflictResolvers = require('./insertConflictResolvers')\n\nclass SortedSet extends AbstractSortedSet\n  constructor: (options) ->\n    options ||= {}\n    options.strategy ||= RedBlackTreeStrategy\n    options.comparator ||= (a, b) -> (a || 0) - (b || 0)\n    options.onInsertConflict ||= insertConflictResolvers.throw\n    super(options)\n\nSortedSet.ArrayStrategy = ArrayStrategy\nSortedSet.BinaryTreeStrategy = BinaryTreeStrategy\nSortedSet.RedBlackTreeStrategy = RedBlackTreeStrategy\n\nSortedSet.onInsertConflictThrow = insertConflictResolvers.throw\nSortedSet.onInsertConflictReplace = insertConflictResolvers.replace\nSortedSet.onInsertConflictIgnore = insertConflictResolvers.ignore\n\nmodule.exports = SortedSet\n"
  ]
}